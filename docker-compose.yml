
version: '3.4'

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_NODE_ID: 1
    command: >
      bash -c "if [ ! -d /tmp/kraft-combined-logs ]; then
        /bin/kafka-storage format --config /etc/kafka/kafka.properties --cluster-id CLUSTER_ID --ignore-formatted; 
      fi; 
      /etc/confluent/docker/run"

  orderservice:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - kafka

  orderservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd",
      "-app-id", "orderservice",
      "-app-port", "80",
      "-dapr-http-port", "3500",
      "-components-path", "/components"]
    volumes:
      - "./components/:/components"
    depends_on:
      - orderservice
    network_mode: "service:orderservice"

  shippingservice:
    build:
      context: ./ShippingService
      dockerfile: Dockerfile
    ports:
      - "5002:80"

  shippingservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd",
      "-app-id", "shippingservice",
      "-app-port", "80",
      "-dapr-http-port", "3501",
      "-components-path", "/components"]
    volumes:
      - "./components/:/components"
    depends_on:
      - shippingservice
    network_mode: "service:shippingservice"

  notificationservice:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    ports:
      - "5103:80"

  notificationservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd",
      "-app-id", "notificationservice",
      "-app-port", "80",
      "-dapr-http-port", "3502",
      "-components-path", "/components"]
    volumes:
      - "./components/:/components"
    depends_on:
      - notificationservice
    network_mode: "service:notificationservice"
