
version: '3.4'

services:
  dapr-dashboard:
    image: "daprio/dashboard"
    ports:
      - "8080:8080"
    environment:
      - DAPR_API_TOKEN=my-secret
    networks:
      - dapr-network

  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50005"]
    networks:
      - dapr-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - dapr-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - dapr-network

  orderservice:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DAPR_HTTP_PORT=3500
      - DAPR_GRPC_PORT=50001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - dapr-network

  orderservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd",
      "-app-id", "orderservice",
      "-app-port", "80",
      "-dapr-http-port", "3500",
      "-dapr-grpc-port", "50001",
      "-placement-host-address", "placement:50005",
      "-components-path", "/components",
      "--log-level", "debug"]
    volumes:
      - "./components/:/components"
    depends_on:
      orderservice:
        condition: service_healthy
      kafka:
        condition: service_healthy
    network_mode: "service:orderservice"

  shippingservice:
    build:
      context: ./ShippingService
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DAPR_HTTP_PORT=3501
      - DAPR_GRPC_PORT=50002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - dapr-network

  shippingservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd",
      "-app-id", "shippingservice",
      "-app-port", "80",
      "-dapr-http-port", "3501",
      "-dapr-grpc-port", "50002",
      "-placement-host-address", "placement:50005",
      "-components-path", "/components",
      "--log-level", "debug"]
    volumes:
      - "./components/:/components"
    depends_on:
      shippingservice:
        condition: service_healthy
      kafka:
        condition: service_healthy
    network_mode: "service:shippingservice"

  notificationservice:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    ports:
      - "5103:80"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DAPR_HTTP_PORT=3502
      - DAPR_GRPC_PORT=50003
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - dapr-network

  notificationservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd",
      "-app-id", "notificationservice",
      "-app-port", "80",
      "-dapr-http-port", "3502",
      "-dapr-grpc-port", "50003",
      "-placement-host-address", "placement:50005",
      "-components-path", "/components",
      "--log-level", "debug"]
    volumes:
      - "./components/:/components"
    depends_on:
      notificationservice:
        condition: service_healthy
      kafka:
        condition: service_healthy
    network_mode: "service:notificationservice"

networks:
  dapr-network:
